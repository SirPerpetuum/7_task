import requests
import socket
import time

def get_location():
    max_retries = 3
    retry_delay = 1

    for attempt in range(max_retries):
        try:
            response = requests.get(
                "http://ip-api.com/json/?lang=ru",
                timeout=5,
                headers={'User-Agent': 'WeatherApp/2.0'}
            )

            if response.status_code == 429:
                wait_time = int(response.headers.get('Retry-After', 10))
                print(f"‚ö†Ô∏è  –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤. –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ —á–µ—Ä–µ–∑ {wait_time} —Å–µ–∫...")
                time.sleep(wait_time)
                continue

            response.raise_for_status()
            data = response.json()

            if data['status'] == 'success':
                return (
                    data.get('city', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –≥–æ—Ä–æ–¥'),
                    data.get('regionName', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ä–µ–≥–∏–æ–Ω'),
                    data.get('country', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Å—Ç—Ä–∞–Ω–∞'),
                    data.get('lat'),
                    data.get('lon')
                )
            else:
                raise ValueError(data.get('message', '–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ.'))

        except requests.exceptions.RequestException as e:
            print(f"üåê  –û—à–∏–±–∫–∞ —Å–µ—Ç–∏ (–ø–æ–ø—ã—Ç–∫–∞ {attempt + 1}): {e}")
            if attempt < max_retries - 1:
                time.sleep(retry_delay)
                retry_delay *= 2
        except Exception as e:
            print(f"‚ö†Ô∏è  –û—à–∏–±–∫–∞: {e}")
            break

    print("‚ùå  –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –ø–æ—Å–ª–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –ø–æ–ø—ã—Ç–æ–∫.")
    return None


if __name__ == "__main__":
    print("üõ∞Ô∏è  –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è...")
    if location := get_location():
        city, region, country, lat, lon = location
        print(f"üìç  –ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ: {city}, {region}, {country}")
        print(f"üåê  –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: {lat:.4f}, {lon:.4f}")
    else:
        print("‚ùå  –¢–µ—Å—Ç –Ω–µ –ø—Ä–æ–π–¥–µ–Ω.")